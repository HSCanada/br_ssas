{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-CA",
    "dataSources": [
      {
        "name": "SqlServer BRSales",
        "connectionString": "Provider=SQLNCLI11;Data Source=CAHSIONNLSQL1;Integrated Security=SSPI;Persist Security Info=false;Initial Catalog=BRSales",
        "impersonationMode": "impersonateAccount",
        "account": "CAHSI\\tcrowley",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Period",
        "columns": [
          {
            "name": "CalMonth",
            "dataType": "int64",
            "sourceColumn": "CalMonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "MonthName",
            "dataType": "string",
            "sourceColumn": "MonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MonthNum",
            "dataType": "int64",
            "sourceColumn": "MonthNum",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "QuarterName",
            "dataType": "string",
            "sourceColumn": "QuarterName",
            "sourceProviderType": "Char"
          },
          {
            "name": "YearNum",
            "dataType": "int64",
            "sourceColumn": "YearNum",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "MonthSeq",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MonthSeq",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FirstMonthSeqInQtr",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FirstMonthSeqInQtr",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "FirstMonthSeqInYear",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FirstMonthSeqInYear",
            "sourceProviderType": "SmallInt"
          }
        ],
        "partitions": [
          {
            "name": "CalendarMonth",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [Dimension].[CalendarMonth].* FROM [Dimension].[CalendarMonth] ",
              "dataSource": "SqlServer BRSales"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [Dimension].[CalendarMonth].* FROM [Dimension].[CalendarMonth] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "CalendarMonth"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Dimension"
          }
        ]
      },
      {
        "name": "Item",
        "columns": [
          {
            "name": "ItemKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ItemKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "Item",
            "sourceProviderType": "Char"
          },
          {
            "name": "SalesCategory",
            "dataType": "string",
            "sourceColumn": "SalesCategory",
            "sourceProviderType": "Char"
          },
          {
            "name": "Major",
            "dataType": "string",
            "sourceColumn": "Major",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ItemCode",
            "dataType": "string",
            "sourceColumn": "ItemCode",
            "sourceProviderType": "Char"
          },
          {
            "name": "Size",
            "dataType": "string",
            "sourceColumn": "Size",
            "sourceProviderType": "Char"
          },
          {
            "name": "Strength",
            "dataType": "string",
            "sourceColumn": "Strength",
            "sourceProviderType": "Char"
          },
          {
            "name": "ItemStatus",
            "dataType": "string",
            "sourceColumn": "ItemStatus",
            "sourceProviderType": "Char"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Brand",
            "sourceProviderType": "WChar"
          },
          {
            "name": "CompetitiveMatchKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CompetitiveMatchKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SalesCategoryRollup",
            "dataType": "string",
            "sourceColumn": "SalesCategoryRollup"
          },
          {
            "name": "Label",
            "dataType": "string",
            "sourceColumn": "Label"
          },
          {
            "name": "SubMajor",
            "dataType": "string",
            "sourceColumn": "SubMajor"
          },
          {
            "name": "Current_BasePrice",
            "dataType": "double",
            "sourceColumn": "Current_BasePrice",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "FamilySet",
            "dataType": "string",
            "sourceColumn": "FamilySet"
          },
          {
            "name": "Supplier",
            "dataType": "string",
            "sourceColumn": "Supplier"
          },
          {
            "name": "SubstItem",
            "dataType": "string",
            "sourceColumn": "SubstItem"
          },
          {
            "name": "SubsItemBasePrice",
            "dataType": "double",
            "sourceColumn": "SubsItemBasePrice"
          },
          {
            "name": "Item2Subs_factor",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SubsItem2Subs_factor"
          },
          {
            "type": "calculated",
            "name": "Item2SubsRate",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "DIVIDE([SubsItemBasePrice],[Current_BasePrice])",
            "formatString": "#,0.0 %;-#,0.0 %;#,0.0 %"
          },
          {
            "type": "calculated",
            "name": "SubsItemValidInd",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "if(OR([Item_Competitive_Conversion_rt]=0, [CompetitiveMatchKey] = 1) ,\"N\",\"Y\")"
          },
          {
            "name": "Item_Competitive_Conversion_rt",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Item_Competitive_Conversion_rt"
          },
          {
            "name": "size_factor",
            "dataType": "int64",
            "sourceColumn": "size_factor"
          },
          {
            "name": "Top15",
            "dataType": "string",
            "sourceColumn": "Top15"
          },
          {
            "name": "ppe_code",
            "dataType": "string",
            "sourceColumn": "ppe_code"
          },
          {
            "name": "StockingCode",
            "dataType": "string",
            "sourceColumn": "StockingCode"
          },
          {
            "name": "BrandEquityCategory",
            "dataType": "string",
            "sourceColumn": "BrandEquityCategory"
          },
          {
            "name": "BrandEquityCode",
            "dataType": "string",
            "sourceColumn": "BrandEquityCode"
          },
          {
            "name": "FamilySetCode",
            "dataType": "string",
            "sourceColumn": "FamilySetCode"
          },
          {
            "name": "adhoc_model_code",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code"
          },
          {
            "name": "adhoc_model_code2",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code2"
          },
          {
            "name": "adhoc_model_code3",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code3"
          },
          {
            "name": "adhoc_model_code4",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code4"
          },
          {
            "name": "adhoc_model_code5",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code5"
          }
        ],
        "partitions": [
          {
            "name": "Item",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "--\tTOP 10",
                "\ti.ItemKey,",
                "\ti.Item,",
                "\ti.SalesCategory,",
                "\ti.SalesCategoryRollup,",
                "\ti.Major,",
                "\ti.SubMajor,",
                "\ti.ItemCode,",
                "\ti.Size,",
                "\ti.Strength,",
                "\ti.ItemStatus,",
                "\ti.Brand,",
                "\ti.CompetitiveMatchKey,",
                "\ti.Label,",
                "\ti.Current_BasePrice,",
                "\ti.FamilySet,",
                "\ti.Supplier,",
                "\ti.Item_Competitive_Conversion_rt,",
                "",
                "\tCASE ",
                "\t\tWHEN isub.ItemKey = 1 ",
                "\t\tTHEN ''",
                "\t\tELSE isub.Item",
                "\tEND\t\t\t\t\t\t\t\t\t\tAS SubstItem,",
                "\tisub.Current_BasePrice\t\t\t\t\tAS SubsItemBasePrice,",
                "\tISNULL(i.Item_Competitive_Conversion_rt,0) AS SubsItem2Subs_factor,",
                "\ti.size_factor,",
                "\ti.Top15,",
                "\ti.ppe_code,",
                "\ti.StockingCode",
                "",
                "\t,i.BrandEquityCategory",
                "\t,i.BrandEquityCode",
                "\t,i.FamilySetCode",
                "\t,i.adhoc_model_code",
                "\t,i.adhoc_model_code2",
                "\t,i.adhoc_model_code3",
                "\t,i.adhoc_model_code4",
                "\t,i.adhoc_model_code5",
                "",
                "",
                "FROM",
                "\tDimension.Item AS i ",
                "",
                "\tINNER JOIN Dimension.Item AS isub ",
                "\tON i.CompetitiveMatchKey = isub.ItemKey"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "--\tTOP 10",
                  "\ti.ItemKey,",
                  "\ti.Item,",
                  "\ti.SalesCategory,",
                  "\ti.SalesCategoryRollup,",
                  "\ti.Major,",
                  "\ti.SubMajor,",
                  "\ti.ItemCode,",
                  "\ti.Size,",
                  "\ti.Strength,",
                  "\ti.ItemStatus,",
                  "\ti.Brand,",
                  "\ti.CompetitiveMatchKey,",
                  "\ti.Label,",
                  "\ti.Current_BasePrice,",
                  "\ti.FamilySet,",
                  "\ti.Supplier,",
                  "\ti.Item_Competitive_Conversion_rt,",
                  "",
                  "\tCASE ",
                  "\t\tWHEN isub.ItemKey = 1 ",
                  "\t\tTHEN ''",
                  "\t\tELSE isub.Item",
                  "\tEND\t\t\t\t\t\t\t\t\t\tAS SubstItem,",
                  "\tisub.Current_BasePrice\t\t\t\t\tAS SubsItemBasePrice,",
                  "\tISNULL(i.Item_Competitive_Conversion_rt,0) AS SubsItem2Subs_factor,",
                  "\ti.size_factor,",
                  "\ti.Top15,",
                  "\ti.ppe_code,",
                  "\ti.StockingCode",
                  "",
                  "\t,i.BrandEquityCategory",
                  "\t,i.BrandEquityCode",
                  "\t,i.FamilySetCode",
                  "\t,i.adhoc_model_code",
                  "\t,i.adhoc_model_code2",
                  "\t,i.adhoc_model_code3",
                  "\t,i.adhoc_model_code4",
                  "\t,i.adhoc_model_code5",
                  "",
                  "",
                  "FROM",
                  "\tDimension.Item AS i ",
                  "",
                  "\tINNER JOIN Dimension.Item AS isub ",
                  "\tON i.CompetitiveMatchKey = isub.ItemKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Competitive Item Count",
            "expression": "DISTINCTCOUNT([CompetitiveMatchKey])"
          },
          {
            "name": "Item Count",
            "expression": "COUNTA([ItemKey])"
          },
          {
            "name": "Brand Count",
            "expression": "DISTINCTCOUNT([Brand])"
          },
          {
            "name": "FamilySet Count",
            "expression": "DISTINCTCOUNT([FamilySetCode])"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "--\tTOP 10",
              "\ti.ItemKey,",
              "\ti.Item,",
              "\ti.SalesCategory,",
              "\ti.SalesCategoryRollup,",
              "\ti.Major,",
              "\ti.SubMajor,",
              "\ti.ItemCode,",
              "\ti.Size,",
              "\ti.Strength,",
              "\ti.ItemStatus,",
              "\ti.Brand,",
              "\ti.CompetitiveMatchKey,",
              "\ti.Label,",
              "\ti.Current_BasePrice,",
              "\ti.FamilySet,",
              "\ti.Supplier,",
              "\ti.Item_Competitive_Conversion_rt,",
              "",
              "\tCASE ",
              "\t\tWHEN isub.ItemKey = 1 ",
              "\t\tTHEN ''",
              "\t\tELSE isub.Item",
              "\tEND\t\t\t\t\t\t\t\t\t\tAS SubstItem,",
              "\tisub.Current_BasePrice\t\t\t\t\tAS SubsItemBasePrice,",
              "\tISNULL(i.Item_Competitive_Conversion_rt,0) AS SubsItem2Subs_factor,",
              "\ti.size_factor,",
              "\ti.Top15,",
              "\ti.ppe_code,",
              "\ti.StockingCode",
              "",
              "\t,i.BrandEquityCategory",
              "\t,i.BrandEquityCode",
              "\t,i.FamilySetCode",
              "\t,i.adhoc_model_code",
              "\t,i.adhoc_model_code2",
              "\t,i.adhoc_model_code3",
              "\t,i.adhoc_model_code4",
              "\t,i.adhoc_model_code5",
              "",
              "",
              "FROM",
              "\tDimension.Item AS i ",
              "",
              "\tINNER JOIN Dimension.Item AS isub ",
              "\tON i.CompetitiveMatchKey = isub.ItemKey"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Item"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Dimension"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "--\tTOP 10",
              "\ti.ItemKey,",
              "\ti.Item,",
              "\ti.SalesCategory,",
              "\ti.SalesCategoryRollup,",
              "\ti.Major,",
              "\ti.SubMajor,",
              "\ti.ItemCode,",
              "\ti.Size,",
              "\ti.Strength,",
              "\ti.ItemStatus,",
              "\ti.Brand,",
              "\ti.CompetitiveMatchKey,",
              "\ti.Label,",
              "\ti.Current_BasePrice,",
              "\ti.FamilySet,",
              "\ti.Supplier,",
              "\ti.Item_Competitive_Conversion_rt,",
              "",
              "\tCASE ",
              "\t\tWHEN isub.ItemKey = 1 ",
              "\t\tTHEN ''",
              "\t\tELSE isub.Item",
              "\tEND\t\t\t\t\t\t\t\t\t\tAS SubstItem,",
              "\tisub.Current_BasePrice\t\t\t\t\tAS SubsItemBasePrice,",
              "\tISNULL(i.Item_Competitive_Conversion_rt,0) AS SubsItem2Subs_factor,",
              "\ti.size_factor,",
              "\ti.Top15,",
              "\ti.ppe_code,",
              "\ti.StockingCode",
              "",
              "\t,i.BrandEquityCategory",
              "\t,i.BrandEquityCode",
              "\t,i.FamilySetCode",
              "\t,i.adhoc_model_code",
              "\t,i.adhoc_model_code2",
              "\t,i.adhoc_model_code3",
              "\t,i.adhoc_model_code4",
              "\t,i.adhoc_model_code5",
              "",
              "",
              "FROM",
              "\tDimension.Item AS i ",
              "",
              "\tINNER JOIN Dimension.Item AS isub ",
              "\tON i.CompetitiveMatchKey = isub.ItemKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ItemCategory",
        "columns": [
          {
            "name": "CategoryRollupKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CategoryRollupKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ItemCategory",
            "dataType": "string",
            "sourceColumn": "ItemCategory",
            "sourceProviderType": "WChar"
          },
          {
            "name": "CategorySharePercent",
            "dataType": "double",
            "sourceColumn": "CategorySharePercent",
            "formatString": "0.0 %;-0.0 %;0.0 %",
            "sourceProviderType": "Double"
          },
          {
            "name": "top15_ind",
            "dataType": "boolean",
            "sourceColumn": "top15_ind",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "Category Brand Count - Industry",
            "dataType": "int64",
            "sourceColumn": "CategoryBrandCount"
          }
        ],
        "partitions": [
          {
            "name": "ItemCategory",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "SELECT [Dimension].[ItemCategory].[CategoryRollupKey],[Dimension].[ItemCategory].[ItemCategory],[Dimension].[ItemCategory].[CategorySharePercent],[Dimension].[ItemCategory].[top15_ind], CategoryBrandCount FROM [Dimension].[ItemCategory]",
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [Dimension].[ItemCategory].[CategoryRollupKey],[Dimension].[ItemCategory].[ItemCategory],[Dimension].[ItemCategory].[CategorySharePercent],[Dimension].[ItemCategory].[top15_ind], CategoryBrandCount FROM [Dimension].[ItemCategory]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "_Category Count",
            "expression": "COUNTA([CategoryRollupKey])"
          },
          {
            "name": "Minimum of Category Brand Count - Industry",
            "expression": "MIN([Category Brand Count - Industry])"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "SELECT [Dimension].[ItemCategory].[CategoryRollupKey],[Dimension].[ItemCategory].[ItemCategory],[Dimension].[ItemCategory].[CategorySharePercent],[Dimension].[ItemCategory].[top15_ind], CategoryBrandCount FROM [Dimension].[ItemCategory]"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ItemCategory"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Dimension"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [Dimension].[ItemCategory].[CategoryRollupKey],[Dimension].[ItemCategory].[ItemCategory],[Dimension].[ItemCategory].[CategorySharePercent],[Dimension].[ItemCategory].[top15_ind], CategoryBrandCount FROM [Dimension].[ItemCategory]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "Customer",
        "columns": [
          {
            "name": "ShipTo",
            "dataType": "int64",
            "sourceColumn": "ShipTo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Billto",
            "dataType": "int64",
            "sourceColumn": "Billto",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Customer",
            "dataType": "string",
            "sourceColumn": "Customer",
            "sourceProviderType": "WChar"
          },
          {
            "name": "CustomerGroup",
            "dataType": "string",
            "sourceColumn": "CustomerGroup",
            "sourceProviderType": "Char"
          },
          {
            "name": "SalesPlan",
            "dataType": "string",
            "sourceColumn": "SalesPlan",
            "sourceProviderType": "Char"
          },
          {
            "name": "FieldSales",
            "dataType": "string",
            "sourceColumn": "FieldSales",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Branch",
            "dataType": "string",
            "sourceColumn": "Branch",
            "sourceProviderType": "Char"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Province",
            "dataType": "string",
            "sourceColumn": "Province",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SalesDivision",
            "dataType": "string",
            "sourceColumn": "SalesDivision",
            "sourceProviderType": "Char"
          },
          {
            "name": "MarketClass",
            "dataType": "string",
            "sourceColumn": "MarketClass",
            "sourceProviderType": "Char"
          },
          {
            "name": "Segment",
            "dataType": "string",
            "sourceColumn": "Segment",
            "sourceProviderType": "Char"
          },
          {
            "name": "Specialty",
            "dataType": "string",
            "sourceColumn": "Specialty",
            "sourceProviderType": "Char"
          },
          {
            "name": "DCC_TrackingShipTo",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DCC_TrackingShipTo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PrivilegesCode",
            "dataType": "string",
            "sourceColumn": "PrivilegesCode"
          },
          {
            "name": "ReviewTrackingInd",
            "dataType": "boolean",
            "sourceColumn": "ReviewTrackingInd"
          },
          {
            "name": "ESTName",
            "dataType": "string",
            "sourceColumn": "ESTName"
          },
          {
            "name": "pma_ind",
            "dataType": "string",
            "sourceColumn": "pma_ind"
          },
          {
            "name": "CommMasterCode_FSC_Current",
            "dataType": "string",
            "sourceColumn": "CommMasterCode_FSC_Current"
          },
          {
            "name": "playbook_focus_code",
            "dataType": "string",
            "sourceColumn": "playbook_focus_code"
          },
          {
            "name": "CreateDate",
            "dataType": "dateTime",
            "sourceColumn": "CreateDate"
          },
          {
            "name": "CustomerStatus",
            "dataType": "string",
            "sourceColumn": "CustomerStatus"
          },
          {
            "type": "calculated",
            "name": "CreateDateYears",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "QUOTIENT(DATEDIFF([CreateDate], Now(), Month), 12)"
          },
          {
            "name": "SalesPlanCode",
            "dataType": "string",
            "sourceColumn": "SalesPlanCode"
          },
          {
            "name": "MarketClassNewCode",
            "dataType": "string",
            "sourceColumn": "MarketClassNewCode"
          },
          {
            "name": "adhoc_model_code",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code"
          },
          {
            "name": "adhoc_model_code2",
            "dataType": "string",
            "sourceColumn": "adhoc_model_code2"
          },
          {
            "name": "adhoc_model_1_text",
            "dataType": "string",
            "sourceColumn": "adhoc_model_1_text"
          },
          {
            "name": "adhoc_model_2_text",
            "dataType": "string",
            "sourceColumn": "adhoc_model_2_text"
          },
          {
            "name": "adhoc_model_3_text",
            "dataType": "string",
            "sourceColumn": "adhoc_model_3_text"
          },
          {
            "name": "IsrName",
            "dataType": "string",
            "sourceColumn": "IsrName"
          }
        ],
        "partitions": [
          {
            "name": "Customer",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "--\ttop 10",
                "\tShipTo,",
                "\tBillto,",
                "\tCustomer,",
                "\tCustomerGroup,",
                "\tSalesPlan,",
                "\tFieldSales,",
                "\tBranch,",
                "\tCity,",
                "\tProvince,",
                "\tSalesDivision,",
                "\tMarketClass,",
                "\tSegment,",
                "\tSpecialty,",
                "\tDCC_TrackingShipTo,",
                "\tPrivilegesCode,",
                "",
                "\t-- note, tracker set by VPA or Billto, tmc, 5 May 20",
                "\tReviewTrackingInd,",
                "\tESTName,",
                "\tpma_ind",
                "",
                "\t,CommMasterCode_FSC_Current",
                "\t,playbook_focus_code",
                "\t,CreateDate",
                "",
                "\t, CustomerStatus",
                "\t,SalesPlanCode",
                "\t,MarketClassNewCode",
                "",
                "\t,adhoc_model_code",
                "\t,adhoc_model_code2",
                "\t",
                "\t,[adhoc_model_1_text]",
                "\t,[adhoc_model_2_text]",
                "\t,[adhoc_model_3_text]",
                "\t,[IsrName]",
                "",
                "",
                "FROM",
                "\tDimension.Customer AS c"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "--\ttop 10",
                  "\tShipTo,",
                  "\tBillto,",
                  "\tCustomer,",
                  "\tCustomerGroup,",
                  "\tSalesPlan,",
                  "\tFieldSales,",
                  "\tBranch,",
                  "\tCity,",
                  "\tProvince,",
                  "\tSalesDivision,",
                  "\tMarketClass,",
                  "\tSegment,",
                  "\tSpecialty,",
                  "\tDCC_TrackingShipTo,",
                  "\tPrivilegesCode,",
                  "",
                  "\t-- note, tracker set by VPA or Billto, tmc, 5 May 20",
                  "\tReviewTrackingInd,",
                  "\tESTName,",
                  "\tpma_ind",
                  "",
                  "\t,CommMasterCode_FSC_Current",
                  "\t,playbook_focus_code",
                  "\t,CreateDate",
                  "",
                  "\t, CustomerStatus",
                  "\t,SalesPlanCode",
                  "\t,MarketClassNewCode",
                  "",
                  "\t,adhoc_model_code",
                  "\t,adhoc_model_code2",
                  "\t",
                  "\t,[adhoc_model_1_text]",
                  "\t,[adhoc_model_2_text]",
                  "\t,[adhoc_model_3_text]",
                  "\t,[IsrName]",
                  "",
                  "",
                  "FROM",
                  "\tDimension.Customer AS c</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "ShipTo Count",
            "expression": "COUNTA(([ShipTo]))"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "--\ttop 10",
              "\tShipTo,",
              "\tBillto,",
              "\tCustomer,",
              "\tCustomerGroup,",
              "\tSalesPlan,",
              "\tFieldSales,",
              "\tBranch,",
              "\tCity,",
              "\tProvince,",
              "\tSalesDivision,",
              "\tMarketClass,",
              "\tSegment,",
              "\tSpecialty,",
              "\tDCC_TrackingShipTo,",
              "\tPrivilegesCode,",
              "",
              "\t-- note, tracker set by VPA or Billto, tmc, 5 May 20",
              "\tReviewTrackingInd,",
              "\tESTName,",
              "\tpma_ind",
              "",
              "\t,CommMasterCode_FSC_Current",
              "\t,playbook_focus_code",
              "\t,CreateDate",
              "",
              "\t, CustomerStatus",
              "\t,SalesPlanCode",
              "\t,MarketClassNewCode",
              "",
              "\t,adhoc_model_code",
              "\t,adhoc_model_code2",
              "\t",
              "\t,[adhoc_model_1_text]",
              "\t,[adhoc_model_2_text]",
              "\t,[adhoc_model_3_text]",
              "\t,[IsrName]",
              "",
              "",
              "FROM",
              "\tDimension.Customer AS c"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Customer"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Dimension"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "--\ttop 10",
              "\tShipTo,",
              "\tBillto,",
              "\tCustomer,",
              "\tCustomerGroup,",
              "\tSalesPlan,",
              "\tFieldSales,",
              "\tBranch,",
              "\tCity,",
              "\tProvince,",
              "\tSalesDivision,",
              "\tMarketClass,",
              "\tSegment,",
              "\tSpecialty,",
              "\tDCC_TrackingShipTo,",
              "\tPrivilegesCode,",
              "",
              "\t-- note, tracker set by VPA or Billto, tmc, 5 May 20",
              "\tReviewTrackingInd,",
              "\tESTName,",
              "\tpma_ind",
              "",
              "\t,CommMasterCode_FSC_Current",
              "\t,playbook_focus_code",
              "\t,CreateDate",
              "",
              "\t, CustomerStatus",
              "\t,SalesPlanCode",
              "\t,MarketClassNewCode",
              "",
              "\t,adhoc_model_code",
              "\t,adhoc_model_code2",
              "\t",
              "\t,[adhoc_model_1_text]",
              "\t,[adhoc_model_2_text]",
              "\t,[adhoc_model_3_text]",
              "\t,[IsrName]",
              "",
              "",
              "FROM",
              "\tDimension.Customer AS c</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Sales",
        "columns": [
          {
            "name": "FactKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FactKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ShipTo",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ShipTo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ItemKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ItemKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "CategoryRollupKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CategoryRollupKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "CalMonth",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CalMonth",
            "sourceProviderType": "Integer"
          },
          {
            "name": "DateKey",
            "dataType": "dateTime",
            "sourceColumn": "DateKey",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "SalesOrderNumber",
            "dataType": "int64",
            "sourceColumn": "SalesOrderNumber",
            "sourceProviderType": "Integer"
          },
          {
            "name": "LineNumber",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LineNumber",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FreeGoodsInvoicedInd",
            "dataType": "boolean",
            "sourceColumn": "FreeGoodsInvoicedInd",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "Quantity",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Quantity",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SalesAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "SalesAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "GPAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "GPAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "GPAtCommCostAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "GPAtCommCostAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "ExtChargebackAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "ExtChargebackAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "ExtBaseAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "ExtBaseAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "DiscountAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "DiscountAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "DiscountLineAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "DiscountLineAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "DiscountOrderAmt",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "DiscountOrderAmt",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "sourceProviderType": "Currency",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "SubsQuantity",
            "dataType": "double",
            "sourceColumn": "SubsQuantity"
          },
          {
            "name": "SubsSalesAmt",
            "dataType": "double",
            "sourceColumn": "SubsSalesAmt"
          },
          {
            "name": "BrandKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BrandKey"
          },
          {
            "name": "PriceMethodKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PriceMethodKey"
          },
          {
            "name": "sales_order_key",
            "dataType": "int64",
            "sourceColumn": "sales_order_key"
          },
          {
            "name": "hs_branded_baseline_ind",
            "dataType": "int64",
            "sourceColumn": "hs_branded_baseline_ind"
          },
          {
            "name": "fg_order_ind",
            "dataType": "boolean",
            "sourceColumn": "fg_order_ind",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "fg_buy_ind",
            "dataType": "int64",
            "sourceColumn": "fg_buy_ind"
          },
          {
            "name": "fg_get_ind",
            "dataType": "int64",
            "sourceColumn": "fg_get_ind"
          },
          {
            "name": "fg_deal_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "fg_deal_id"
          },
          {
            "name": "fg_deal_ind",
            "dataType": "boolean",
            "sourceColumn": "fg_deal_ind",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          }
        ],
        "partitions": [
          {
            "name": "Sale_brs",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "--\ttop 10",
                "\tFactKey, ",
                "\tShipTo, ",
                "\tItemKey, ",
                "\tBrandKey,",
                "\tCategoryRollupKey, ",
                "\tCalMonth,",
                "\tDateKey,",
                "\tSalesOrderNumber,",
                "\tsales_order_key,",
                "\tLineNumber,",
                "\tFreeGoodsInvoicedInd,",
                "\tPriceMethodKey,",
                "\tQuantity,",
                "\tSalesAmt,",
                "\tGPAmt, ",
                "\tGPAtCommCostAmt,",
                "\tExtChargebackAmt,",
                "\tExtBaseAmt,",
                "\tDiscountAmt,",
                "\tDiscountLineAmt,",
                "\tDiscountOrderAmt,",
                "\tSubsQuantity,",
                "\tSubsSalesAmt",
                "\t,hs_branded_baseline_ind",
                "",
                "\t,fg_order_ind",
                "\t,fg_buy_ind",
                "\t,fg_get_ind",
                "\t,fg_deal_ind",
                "\t,fg_deal_id",
                "",
                "",
                "",
                "FROM",
                "\tFact.Sale_brs AS f"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "--\ttop 10",
                  "\tFactKey, ",
                  "\tShipTo, ",
                  "\tItemKey, ",
                  "\tBrandKey,",
                  "\tCategoryRollupKey, ",
                  "\tCalMonth,",
                  "\tDateKey,",
                  "\tSalesOrderNumber,",
                  "\tsales_order_key,",
                  "\tLineNumber,",
                  "\tFreeGoodsInvoicedInd,",
                  "\tPriceMethodKey,",
                  "\tQuantity,",
                  "\tSalesAmt,",
                  "\tGPAmt, ",
                  "\tGPAtCommCostAmt,",
                  "\tExtChargebackAmt,",
                  "\tExtBaseAmt,",
                  "\tDiscountAmt,",
                  "\tDiscountLineAmt,",
                  "\tDiscountOrderAmt,",
                  "\tSubsQuantity,",
                  "\tSubsSalesAmt",
                  "\t,hs_branded_baseline_ind",
                  "",
                  "\t,fg_order_ind",
                  "\t,fg_buy_ind",
                  "\t,fg_get_ind",
                  "\t,fg_deal_ind",
                  "\t,fg_deal_id",
                  "",
                  "",
                  "",
                  "FROM",
                  "\tFact.Sale_brs AS f</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Sales in Period",
            "expression": " SUM([SalesAmt])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "GP in Period",
            "expression": " SUM([GPAmt]) ",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD Sales",
            "expression": " CALCULATE([Sales in Period],filter(Period, Period[CalMonth]=[__first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "YTD Sales",
            "expression": " CALCULATE([Sales in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]&&Period[MonthSeq]<=[__seq_first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD GP",
            "expression": " CALCULATE([GP in Period],filter(Period, Period[CalMonth]=[__first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "YTD GP",
            "expression": " CALCULATE([GP in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]&&Period[MonthSeq]<=[__seq_first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY MTD Sales",
            "expression": " CALCULATE([Sales in Period],filter(Period, Period[MonthSeq]=[__seq_first_month_current]-(12 * [__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY MTD GP",
            "expression": " CALCULATE([GP in Period],filter(Period, Period[MonthSeq]=[__seq_first_month_current]-(12 * [__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD Sales Var",
            "expression": " [MTD Sales]-[PY MTD Sales]",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD GP Var",
            "expression": " [MTD GP]-[PY MTD GP]",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY YTD Sales",
            "expression": " CALCULATE([Sales in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]-(12* [__year_factor]) &&Period[MonthSeq]<=[__seq_first_month_current]-(12 * [__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY YTD GP",
            "expression": " CALCULATE([GP in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]-(12*[__year_factor]) &&Period[MonthSeq]<=[__seq_first_month_current]-(12*[__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "YTD Sales Var",
            "expression": " [YTD Sales]-[PY YTD Sales]",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "YTD GP Var",
            "expression": " [YTD GP]-[PY YTD GP]",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD Sales Var %",
            "expression": " DIVIDE([MTD Sales],[PY MTD Sales]) -1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MTD GP Var %",
            "expression": " DIVIDE([MTD GP],[PY MTD GP]) -1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "YTD Sales Var %",
            "expression": " DIVIDE([YTD Sales],[PY YTD Sales])-1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "YTD GP Sales Var %",
            "expression": " DIVIDE([YTD GP],[PY YTD GP]) -1",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Qty in Period",
            "expression": " sum([Quantity])",
            "formatString": "#,0"
          },
          {
            "name": "MTD Qty",
            "expression": " CALCULATE([Qty in Period],filter(Period, Period[CalMonth]=[__first_month_current]))",
            "formatString": "0"
          },
          {
            "name": "YTD Qty",
            "expression": " CALCULATE([Qty in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]&&Period[MonthSeq]<=[__seq_first_month_current]))",
            "formatString": "0"
          },
          {
            "name": "PY MTD Qty",
            "expression": " CALCULATE([Qty in Period],filter(Period, Period[MonthSeq]=[__seq_first_month_current]-(12 * [__year_factor])))",
            "formatString": "0"
          },
          {
            "name": "MTD Qty Var",
            "expression": " [MTD Qty]-[PY MTD Qty]",
            "formatString": "0"
          },
          {
            "name": "PY YTD Qty",
            "expression": " CALCULATE([Qty in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]-(12*[__year_factor])&&Period[MonthSeq]<=[__seq_first_month_current]-(12*[__year_factor])))",
            "formatString": "0"
          },
          {
            "name": "YTD Qty Var",
            "expression": " [YTD Qty]-[PY YTD Qty]",
            "formatString": "0"
          },
          {
            "name": "Disc in Period",
            "expression": " sum(Sales[DiscountAmt])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD Disc",
            "expression": " CALCULATE([Disc in Period],filter(Period, Period[CalMonth]=[__first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "YTD Disc",
            "expression": " CALCULATE([Disc in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]&&Period[MonthSeq]<=[__seq_first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY MTD Disc",
            "expression": " CALCULATE([Disc in Period],filter(Period, Period[MonthSeq]=[__seq_first_month_current]-(12 * [__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY YTD Disc",
            "expression": " CALCULATE([Disc in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]-(12*[__year_factor])&&Period[MonthSeq]<=[__seq_first_month_current]-(12*[__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Ext.Base in Period",
            "expression": " sum(Sales[ExtBaseAmt])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "MTD Ext.Base",
            "expression": " CALCULATE([Ext.Base in Period],filter(Period, Period[CalMonth]=[__first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "YTD Ext.Base",
            "expression": " CALCULATE([Ext.Base in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]&&Period[MonthSeq]<=[__seq_first_month_current]))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY MTD Ext.Base",
            "expression": " CALCULATE([Ext.Base in Period],filter(Period, Period[MonthSeq]=[__seq_first_month_current]-(12*[__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "PY YTD Ext.Base",
            "expression": " CALCULATE([Ext.Base in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]-(12*[__year_factor])&&Period[MonthSeq]<=[__seq_first_month_current]-(12*[__year_factor])))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Disc% in Period",
            "expression": " [Disc in Period]/[Ext.Base in Period]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MTD Disc%",
            "expression": " DIVIDE([MTD Disc],[MTD Ext.Base])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "YTD Disc%",
            "expression": " DIVIDE([YTD Disc],[YTD Ext.Base])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "PY MTD Disc%",
            "expression": " DIVIDE([PY MTD Disc],[PY MTD Ext.Base])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "PY YTD Disc%",
            "expression": " DIVIDE([PY YTD Disc],[PY YTD Ext.Base])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "MTD Disc% Improvement",
            "expression": " [MTD Disc%]-[PY MTD Disc%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "YTD Disc% Improvement",
            "expression": " [YTD Disc%]-[PY YTD Disc%]",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Rolling  3mo Sales",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Sales in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-3) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling  6mo Sales",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Sales in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-6) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling 12mo Sales",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Sales in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-12) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Lines in Period",
            "expression": "COUNTA([LineNumber])",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "MTD Lines",
            "expression": " CALCULATE([Lines in Period],filter(Period, Period[CalMonth]=[__first_month_current]))",
            "formatString": "#,0"
          },
          {
            "name": "YTD Lines",
            "expression": " CALCULATE([Lines in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]&&Period[MonthSeq]<=[__seq_first_month_current]))",
            "formatString": "#,0"
          },
          {
            "name": "PY Sales",
            "expression": " CALCULATE([Sales in Period],filter(ALL(Period), Period[MonthSeq]>=[__seq_first_month_in_year]-(12*[__year_factor] ) &&Period[MonthSeq]<=[__seq_first_month_in_year]-1-12*([__year_factor]-1) ))",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "CY Sales (Est)",
            "expression": " [YTD Sales] * [__ytd_factor]",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling 12mo Lines",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Lines in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-12) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Rolling  3mo Qty",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Qty in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-3) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Rolling  6mo Qty",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Qty in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-6) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Rolling 12mo Qty",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [Qty in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-12) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Rolling  3mo Average Price",
            "expression": "DIVIDE([Rolling  3mo Sales],[Rolling  3mo Qty])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling  6mo Average Price",
            "expression": "DIVIDE([Rolling  6mo Sales],[Rolling  6mo Qty])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling 12mo Average Price",
            "expression": "DIVIDE([Rolling 12mo Sales],[Rolling 12mo Qty])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "SubsQty in Period",
            "expression": " sum([SubsQuantity])",
            "formatString": "#,0",
            "isHidden": true
          },
          {
            "name": "Rolling 12mo SubsSales",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [SubsSales in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-12) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "SubsSales in Period",
            "expression": " SUM([SubsSalesAmt])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling 12mo SubsQty",
            "expression": [
              " ",
              "",
              "",
              "CALCULATE(",
              "",
              "        [SubsQty in Period],",
              "",
              "        filter(",
              "",
              "            ALL(Period),",
              " ",
              "           Period[MonthSeq]>([__seq_first_month_current]-12) &&",
              "",
              "            Period[MonthSeq]<=[__seq_first_month_current]",
              "",
              "        )",
              "",
              ")",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "Rolling 12mo Average SubsPrice",
            "expression": "DIVIDE([Rolling 12mo SubsSales],[Rolling 12mo SubsQty])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling 12mo Subs Savings",
            "expression": "[Rolling 12mo Sales]-[Rolling 12mo SubsQty]*[Rolling 12mo Average SubsPrice]",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "Rolling 12 Mo Freq Range",
            "expression": [
              "",
              "CALCULATE (",
              "    VALUES ( FreqRange[Freq Range] ),",
              "    FILTER ( ",
              "        FreqRange,",
              "        'Sales'[Rolling 12mo Lines] >= FreqRange[Min Freq] ",
              "        && 'Sales'[Rolling 12mo Lines] <= FreqRange[Max Freq]",
              "    )",
              ")"
            ]
          },
          {
            "name": "Rolling 12mo Item Sales Bucket",
            "expression": [
              " CALCULATE ( ",
              "\tCOUNTROWS ( ",
              "\t\tFILTER ( ",
              "\t\t'Item', ",
              "\t\t\tAND ( ",
              "\t\t\t\t'Sales'[Rolling 12mo Lines] >= MIN ( FreqRange[Min Freq] ), ",
              "\t\t\t\t'Sales'[Rolling 12mo Lines] < MAX ( FreqRange[Max Freq] ) ",
              "\t\t\t) ",
              "\t\t) ",
              "\t)",
              ") "
            ],
            "formatString": "#,0"
          },
          {
            "name": "Rolling 12mo Category Brand Count",
            "expression": [
              " CALCULATE ( ",
              "\tCOUNTROWS ( ",
              "\t\tFILTER ( ",
              "\t\t\t'ItemBrand', ",
              "\t\t\t'Sales'[Rolling 12mo Lines] >0",
              "\t\t) ",
              "\t) ",
              ") "
            ]
          },
          {
            "name": "Rolling 12mo Customer Sales Bucket",
            "expression": [
              " CALCULATE ( ",
              "\tCOUNTROWS ( ",
              "\t\tFILTER ( ",
              "\t\t'Customer', ",
              "\t\t\tAND ( ",
              "\t\t\t\t'Sales'[Rolling 12mo Sales] >= MIN ( 'SpendRange'[Spend Min]  ), ",
              "\t\t\t\t'Sales'[Rolling 12mo Sales] < MAX ( 'SpendRange'[Spend Max] ) ",
              "\t\t\t) ",
              "\t\t) ",
              "\t)",
              ") "
            ],
            "isHidden": true
          },
          {
            "name": "YTD Sales Var % - Customer Count Below Threshhold",
            "expression": "CALCULATE('Customer'[ShipTo Count], FILTER('Customer',  [YTD Sales Var %] < 0.25))"
          },
          {
            "name": "MTD GM",
            "expression": " DIVIDE([MTD GP],[MTD Sales])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "YTD GM",
            "expression": " DIVIDE([YTD GP],[YTD Sales])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "PY MTD GM",
            "expression": " DIVIDE([PY MTD GP],[PY MTD Sales])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "PY YTD GM",
            "expression": " DIVIDE([PY YTD GP],[PY YTD Sales])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "Average Price in Period",
            "expression": "DIVIDE([Sales in Period],[Qty in Period])",
            "formatString": "\\$#,0.00;-\\$#,0.00;\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"4105\" DisplayName=\"$ English (Canada)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"1\" /></Format>"
              }
            ]
          },
          {
            "name": "GM in Period",
            "expression": "Divide([GP in Period],[Sales in Period])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "fg_buy_count",
            "expression": "SUM([fg_buy_ind])",
            "formatString": "#,0"
          },
          {
            "name": "fg_get_count",
            "expression": "SUM([fg_get_ind])",
            "formatString": "#,0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "--\ttop 10",
              "\tFactKey, ",
              "\tShipTo, ",
              "\tItemKey, ",
              "\tBrandKey,",
              "\tCategoryRollupKey, ",
              "\tCalMonth,",
              "\tDateKey,",
              "\tSalesOrderNumber,",
              "\tsales_order_key,",
              "\tLineNumber,",
              "\tFreeGoodsInvoicedInd,",
              "\tPriceMethodKey,",
              "\tQuantity,",
              "\tSalesAmt,",
              "\tGPAmt, ",
              "\tGPAtCommCostAmt,",
              "\tExtChargebackAmt,",
              "\tExtBaseAmt,",
              "\tDiscountAmt,",
              "\tDiscountLineAmt,",
              "\tDiscountOrderAmt,",
              "\tSubsQuantity,",
              "\tSubsSalesAmt",
              "\t,hs_branded_baseline_ind",
              "",
              "\t,fg_order_ind",
              "\t,fg_buy_ind",
              "\t,fg_get_ind",
              "\t,fg_deal_ind",
              "\t,fg_deal_id",
              "",
              "",
              "",
              "FROM",
              "\tFact.Sale_brs AS f"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Sale_brs"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Fact"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "--\ttop 10",
              "\tFactKey, ",
              "\tShipTo, ",
              "\tItemKey, ",
              "\tBrandKey,",
              "\tCategoryRollupKey, ",
              "\tCalMonth,",
              "\tDateKey,",
              "\tSalesOrderNumber,",
              "\tsales_order_key,",
              "\tLineNumber,",
              "\tFreeGoodsInvoicedInd,",
              "\tPriceMethodKey,",
              "\tQuantity,",
              "\tSalesAmt,",
              "\tGPAmt, ",
              "\tGPAtCommCostAmt,",
              "\tExtChargebackAmt,",
              "\tExtBaseAmt,",
              "\tDiscountAmt,",
              "\tDiscountLineAmt,",
              "\tDiscountOrderAmt,",
              "\tSubsQuantity,",
              "\tSubsSalesAmt",
              "\t,hs_branded_baseline_ind",
              "",
              "\t,fg_order_ind",
              "\t,fg_buy_ind",
              "\t,fg_get_ind",
              "\t,fg_deal_ind",
              "\t,fg_deal_id",
              "",
              "",
              "",
              "FROM",
              "\tFact.Sale_brs AS f</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Salesorder",
        "columns": [
          {
            "name": "SalesOrderNumber",
            "dataType": "int64",
            "sourceColumn": "SalesOrderNumber",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AdvancedPricingInd",
            "dataType": "boolean",
            "isHidden": true,
            "sourceColumn": "AdvancedPricingInd",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "OrderSource",
            "dataType": "string",
            "sourceColumn": "OrderSource",
            "sourceProviderType": "Char"
          },
          {
            "name": "PromotionType",
            "dataType": "string",
            "sourceColumn": "PromotionType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Promotion",
            "dataType": "string",
            "sourceColumn": "Promotion",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PromotionConvention",
            "dataType": "string",
            "sourceColumn": "PromotionConvention",
            "sourceProviderType": "WChar"
          },
          {
            "name": "DocType",
            "dataType": "string",
            "sourceColumn": "DocType",
            "sourceProviderType": "Char"
          },
          {
            "name": "EnteredBy",
            "dataType": "string",
            "sourceColumn": "EnteredBy",
            "sourceProviderType": "Char"
          },
          {
            "name": "OrderTakenBy",
            "dataType": "string",
            "sourceColumn": "OrderTakenBy",
            "sourceProviderType": "Char"
          },
          {
            "name": "OrderSourceRollup",
            "dataType": "string",
            "sourceColumn": "OrderSourceRollup"
          },
          {
            "name": "sales_order_key",
            "dataType": "int64",
            "sourceColumn": "sales_order_key"
          }
        ],
        "partitions": [
          {
            "name": "Salesorder_brs",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "-- top 10",
                "  SalesOrderNumber",
                "  ,sales_order_key",
                "  ,AdvancedPricingInd",
                "  ,OrderSource",
                "  ,OrderSourceRollup",
                "  ,PromotionType",
                "  ,Promotion",
                "  ,PromotionConvention",
                "  ,DocType",
                "  ,EnteredBy",
                "  ,OrderTakenBy",
                "FROM",
                "  Dimension.Salesorder_brs"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "-- top 10",
                  "  SalesOrderNumber",
                  "  ,sales_order_key",
                  "  ,AdvancedPricingInd",
                  "  ,OrderSource",
                  "  ,OrderSourceRollup",
                  "  ,PromotionType",
                  "  ,Promotion",
                  "  ,PromotionConvention",
                  "  ,DocType",
                  "  ,EnteredBy",
                  "  ,OrderTakenBy",
                  "FROM",
                  "  Dimension.Salesorder_brs</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState><DesignerState><UseGenericDesigner>false</UseGenericDesigner><InternalDesignerState><QueryDefinition xmlns=\"http://schemas.microsoft.com/ReportingServices/QueryDefinition/Relational\"><SelectedColumns><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"SalesOrderNumber\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"AdvancedPricingInd\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"OrderSource\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"OrderSourceRollup\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"PromotionType\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"Promotion\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"PromotionConvention\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"DocType\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"EnteredBy\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"OrderTakenBy\" /></SelectedColumns></QueryDefinition></InternalDesignerState></DesignerState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "-- top 10",
              "  SalesOrderNumber",
              "  ,sales_order_key",
              "  ,AdvancedPricingInd",
              "  ,OrderSource",
              "  ,OrderSourceRollup",
              "  ,PromotionType",
              "  ,Promotion",
              "  ,PromotionConvention",
              "  ,DocType",
              "  ,EnteredBy",
              "  ,OrderTakenBy",
              "FROM",
              "  Dimension.Salesorder_brs"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Salesorder_brs"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Dimension"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "-- top 10",
              "  SalesOrderNumber",
              "  ,sales_order_key",
              "  ,AdvancedPricingInd",
              "  ,OrderSource",
              "  ,OrderSourceRollup",
              "  ,PromotionType",
              "  ,Promotion",
              "  ,PromotionConvention",
              "  ,DocType",
              "  ,EnteredBy",
              "  ,OrderTakenBy",
              "FROM",
              "  Dimension.Salesorder_brs</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState><DesignerState><UseGenericDesigner>false</UseGenericDesigner><InternalDesignerState><QueryDefinition xmlns=\"http://schemas.microsoft.com/ReportingServices/QueryDefinition/Relational\"><SelectedColumns><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"SalesOrderNumber\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"AdvancedPricingInd\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"OrderSource\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"OrderSourceRollup\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"PromotionType\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"Promotion\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"PromotionConvention\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"DocType\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"EnteredBy\" /><ColumnExpression Schema=\"Dimension\" ColumnOwner=\"Salesorder_brs\" ColumnName=\"OrderTakenBy\" /></SelectedColumns></QueryDefinition></InternalDesignerState></DesignerState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Period Select",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "CalMonth",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "Period[CalMonth]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MonthName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[MonthName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MonthNum",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[MonthNum]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "QuarterName",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[QuarterName]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "YearNum",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[YearNum]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MonthSeq",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[MonthSeq]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "FirstMonthSeqInQtr",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[FirstMonthSeqInQtr]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "FirstMonthSeqInYear",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "Period[FirstMonthSeqInYear]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "Period"
            }
          }
        ],
        "measures": [
          {
            "name": "__first_month_current",
            "expression": " max('Period Select'[CalMonth])",
            "isHidden": true
          },
          {
            "name": "__seq_first_month_current",
            "expression": " calculate(max('Period Select'[MonthSeq]),filter('Period Select','Period Select'[CalMonth]=[__first_month_current]))",
            "isHidden": true
          },
          {
            "name": "__seq_first_month_in_year",
            "expression": " calculate(max('Period Select'[FirstMonthSeqInYear]),filter('Period Select','Period Select'[CalMonth]=[__first_month_current]))",
            "isHidden": true
          },
          {
            "name": "__seq_first_month_in_quarter",
            "expression": " calculate(max('Period Select'[FirstMonthSeqInQtr]),filter('Period Select','Period Select'[CalMonth]=[__first_month_current]))",
            "isHidden": true
          },
          {
            "name": "__first_month_number",
            "expression": " calculate(max('Period Select'[MonthNum]),filter('Period Select','Period Select'[CalMonth]=[__first_month_current]))",
            "isHidden": true
          },
          {
            "name": "__ytd_factor",
            "expression": "12/[__first_month_number]",
            "isHidden": true
          }
        ]
      },
      {
        "name": "FreqRange",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Freq Range",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Freq Range]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Min Freq",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Min Freq]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Max Freq",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Max Freq]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE (",
                "    \"Freq Range\", STRING,",
                "    \"Min Freq\", INTEGER,",
                "    \"Max Freq\", INTEGER,",
                "    {",
                "        { \"1\", 1, 2 },",
                "        { \"2\", 2, 3 },",
                "        { \"More\", 3, 9999999 }",
                "    }",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "ItemBrand",
        "columns": [
          {
            "name": "BrandKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BrandKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BrandCode",
            "dataType": "string",
            "sourceColumn": "BrandCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "Brand",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "ItemBrand",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT        ",
                "\t--top 10 ",
                "\tSupplierKey                AS BrandKey,",
                "\tRTRIM(Supplier)         AS BrandCode, ",
                "\tRTRIM(supplier_nm)   AS Brand",
                "FROM",
                "BRS_ItemSupplier"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT        ",
                  "\t--top 10 ",
                  "\tSupplierKey                AS BrandKey,",
                  "\tRTRIM(Supplier)         AS BrandCode, ",
                  "\tRTRIM(supplier_nm)   AS Brand",
                  "FROM",
                  "BRS_ItemSupplier</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT        ",
              "\t--top 10 ",
              "\tSupplierKey                AS BrandKey,",
              "\tRTRIM(Supplier)         AS BrandCode, ",
              "\tRTRIM(supplier_nm)   AS Brand",
              "FROM",
              "BRS_ItemSupplier"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ItemBrand"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT        ",
              "\t--top 10 ",
              "\tSupplierKey                AS BrandKey,",
              "\tRTRIM(Supplier)         AS BrandCode, ",
              "\tRTRIM(supplier_nm)   AS Brand",
              "FROM",
              "BRS_ItemSupplier</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "SpendRange",
        "columns": [
          {
            "name": "Spend Min",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spend Min",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Spend Max",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Spend Max",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Spend Range",
            "dataType": "string",
            "sourceColumn": "Spend Range",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "SpendRange",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "      [Spend_From]\t\tAS [Spend Min]",
                "      ,[Spend_To]\t\tAS [Spend Max]",
                "      ,[Spend_Display]  AS [Spend Range]",
                "  FROM [BRS_Customer_Spend_Category]"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "      [Spend_From]\t\tAS [Spend Min]",
                  "      ,[Spend_To]\t\tAS [Spend Max]",
                  "      ,[Spend_Display]  AS [Spend Range]",
                  "  FROM [BRS_Customer_Spend_Category]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "      [Spend_From]\t\tAS [Spend Min]",
              "      ,[Spend_To]\t\tAS [Spend Max]",
              "      ,[Spend_Display]  AS [Spend Range]",
              "  FROM [BRS_Customer_Spend_Category]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "SpendRange"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "      [Spend_From]\t\tAS [Spend Min]",
              "      ,[Spend_To]\t\tAS [Spend Max]",
              "      ,[Spend_Display]  AS [Spend Range]",
              "  FROM [BRS_Customer_Spend_Category]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "PriceMethod",
        "columns": [
          {
            "name": "PriceMethodKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PriceMethodKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PriceMethodDescr",
            "dataType": "string",
            "sourceColumn": "PriceMethodDescr",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PriceMethodCode",
            "dataType": "string",
            "sourceColumn": "PriceMethodCode",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "InPlan",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([PriceMethodCode]=\"S\" || [PriceMethodCode]=\"C\", 1, 0)"
          }
        ],
        "partitions": [
          {
            "name": "PriceMethod",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "\t[PriceMethodKey]",
                "\t,[PriceMethodDescr]",
                "\t,[PriceMethod] as [PriceMethodCode]",
                "FROM ",
                "\t[BRS_PriceMethod]",
                "WHERE",
                "\tStatusCd  = 1"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "\t[PriceMethodKey]",
                  "\t,[PriceMethodDescr]",
                  "\t,[PriceMethod] as [PriceMethodCode]",
                  "FROM ",
                  "\t[BRS_PriceMethod]",
                  "WHERE",
                  "\tStatusCd  = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "\t[PriceMethodKey]",
              "\t,[PriceMethodDescr]",
              "\t,[PriceMethod] as [PriceMethodCode]",
              "FROM ",
              "\t[BRS_PriceMethod]",
              "WHERE",
              "\tStatusCd  = 1"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "PriceMethod"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "\t[PriceMethodKey]",
              "\t,[PriceMethodDescr]",
              "\t,[PriceMethod] as [PriceMethodCode]",
              "FROM ",
              "\t[BRS_PriceMethod]",
              "WHERE",
              "\tStatusCd  = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ItemTarget",
        "columns": [
          {
            "name": "ItemKey",
            "dataType": "int64",
            "sourceColumn": "ItemKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Item",
            "dataType": "string",
            "sourceColumn": "Item",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SubMajorProdClass",
            "dataType": "string",
            "sourceColumn": "SubMajorProdClass",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Size",
            "dataType": "string",
            "sourceColumn": "Size",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "size_factor",
            "dataType": "int64",
            "sourceColumn": "size_factor",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "CurrentCorporatePrice",
            "dataType": "double",
            "sourceColumn": "CurrentCorporatePrice"
          }
        ],
        "partitions": [
          {
            "name": "ItemTarget",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "\tItemKey, ",
                "\tItem, ",
                "\tSubMajorProdClass, ",
                "\t[CurrentCorporatePrice],",
                "\tSize, ",
                "\tsize_factor",
                "FROM",
                "\tBRS_Item",
                "WHERE",
                "\tItem = '1127017'"
              ],
              "dataSource": "SqlServer BRSales"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
                  "\tItemKey, ",
                  "\tItem, ",
                  "\tSubMajorProdClass, ",
                  "\t[CurrentCorporatePrice],",
                  "\tSize, ",
                  "\tsize_factor",
                  "FROM",
                  "\tBRS_Item",
                  "WHERE",
                  "\tItem = '1127017'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT",
              "\tItemKey, ",
              "\tItem, ",
              "\tSubMajorProdClass, ",
              "\t[CurrentCorporatePrice],",
              "\tSize, ",
              "\tsize_factor",
              "FROM",
              "\tBRS_Item",
              "WHERE",
              "\tItem = '1127017'"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ItemTarget"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT",
              "\tItemKey, ",
              "\tItem, ",
              "\tSubMajorProdClass, ",
              "\t[CurrentCorporatePrice],",
              "\tSize, ",
              "\tsize_factor",
              "FROM",
              "\tBRS_Item",
              "WHERE",
              "\tItem = '1127017'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Period Select YearFactor",
        "columns": [
          {
            "name": "YearFactor",
            "dataType": "int64",
            "sourceColumn": "YearFactor",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Note",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Note",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "Period Select YearFactor",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [dbo].[BRS_FiscalYearFactor].* FROM [dbo].[BRS_FiscalYearFactor] ",
              "dataSource": "SqlServer BRSales"
            }
          }
        ],
        "measures": [
          {
            "name": "__year_factor",
            "expression": "min([YearFactor])"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [dbo].[BRS_FiscalYearFactor].* FROM [dbo].[BRS_FiscalYearFactor] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BRS_FiscalYearFactor"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "a9d4cee1-cf94-4f70-abb8-233abd346380",
        "fromTable": "Sales",
        "fromColumn": "ShipTo",
        "toTable": "Customer",
        "toColumn": "ShipTo"
      },
      {
        "name": "9ac06a7d-46db-437d-a26b-41d741e711ee",
        "fromTable": "Sales",
        "fromColumn": "ItemKey",
        "toTable": "Item",
        "toColumn": "ItemKey"
      },
      {
        "name": "2b945a59-75ff-419c-8724-80c0d6abeaec",
        "fromTable": "Sales",
        "fromColumn": "CategoryRollupKey",
        "toTable": "ItemCategory",
        "toColumn": "CategoryRollupKey"
      },
      {
        "name": "b5de38c0-ae8e-4787-ac63-23a6f3b45cf9",
        "fromTable": "Sales",
        "fromColumn": "CalMonth",
        "toTable": "Period",
        "toColumn": "CalMonth"
      },
      {
        "name": "04d769e3-7733-4278-bbf1-4bea89feeee3",
        "fromTable": "Sales",
        "fromColumn": "BrandKey",
        "toTable": "ItemBrand",
        "toColumn": "BrandKey"
      },
      {
        "name": "2ade6654-0100-44d6-af16-f1e589425b37",
        "fromTable": "Sales",
        "fromColumn": "PriceMethodKey",
        "toTable": "PriceMethod",
        "toColumn": "PriceMethodKey"
      },
      {
        "name": "fa90cea0-7a76-4faa-aefc-ba12e79b5455",
        "fromTable": "Sales",
        "fromColumn": "sales_order_key",
        "toTable": "Salesorder",
        "toColumn": "sales_order_key"
      }
    ],
    "roles": [
      {
        "name": "User Role",
        "modelPermission": "readRefresh",
        "members": [
          {
            "memberName": "CAHSI\\tcrowley",
            "memberId": "S-1-5-21-2722441861-2609703027-3449782368-1815"
          },
          {
            "memberName": "CAHSI\\Gary.Winslow",
            "memberId": "S-1-5-21-2722441861-2609703027-3449782368-1322"
          },
          {
            "memberName": "CAHSI\\JLi",
            "memberId": "S-1-5-21-2722441861-2609703027-3449782368-2414"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}